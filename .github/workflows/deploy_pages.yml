name: Build & Deploy KB (Ultra Hardened)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip pyyaml pillow

      - name: Lint (personal memos protected)
        run: |
          python scripts/lint_public.py

      - name: Publish public subset (kb -> docs/kb) with FM injection
        run: |
          python scripts/publish_public.py

      - name: Resolve Obsidian wikilinks
        run: |
          python scripts/resolve_wikilinks.py

      - name: Sanitize Markdown (Liquid/links; code-fence-aware)
        run: |
          python scripts/sanitize_liquid_and_links.py

      - name: Optimize images (JPEG/PNG)
        run: |
          python scripts/optimize_images.py

      - name: Build search-index.json (permalink-aware)
        run: |
          python scripts/build_search_index.py

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: docs

      - name: Install Jekyll deps
        working-directory: docs
        run: |
          bundle config set path 'vendor/bundle'
          bundle install --jobs 4 --retry 3
          bundle exec jekyll -v

      - name: Generate deploy config (url/baseurl with env override)
        run: |
          python scripts/generate_baseurl_config.py

      - name: Build site with Jekyll
        run: |
          bundle exec jekyll build -s ./docs -d ./_site -c ./docs/_config.yml,./docs/_config.deploy.yml

      - name: Check internal links (href/src)
        run: |
          python scripts/check_site_internal_links.py

      - name: Detect case-collision (Windows/macOS vs Pages)
        run: |
          python scripts/detect_case_collisions.py

      - name: Secret scan (basic patterns)
        run: |
          python scripts/secret_scan.py

      - name: Enforce asset budgets (warn >10MB; set ASSET_LIMIT_MB to override)
        run: |
          python scripts/enforce_asset_budgets.py

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
